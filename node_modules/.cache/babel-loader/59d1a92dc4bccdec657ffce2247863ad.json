{"ast":null,"code":"var _jsxFileName = \"/home/steffent/Project-2/front-end/my-app/src/Components/DeckBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBar from \"./SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckBuilder() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [mtgCardsList, setMtgCardsList] = useState();\n\n  const fetchData = async searchInput => {\n    return await fetch(`https://api.magicthegathering.io/v1/cards?name=${searchInput}`).then(res => res.json()).then(data => {\n      setMtgCardsList(data.cards);\n    });\n  };\n\n  const updateInput = async input => {\n    setInput(input);\n    await fetchData(input);\n  };\n\n  useEffect(() => {\n    fetchData(\"\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [mtgCardsList && /*#__PURE__*/_jsxDEV(SearchBar, {\n      input: input,\n      onChange: updateInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardcontainer\",\n      children: mtgCardsList && /*#__PURE__*/_jsxDEV(CardList, {\n        mtgCardsList: mtgCardsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DeckBuilder, \"jLuiL+o8+m3DKWJsFp6nvtiXZP4=\");\n\n_c = DeckBuilder;\nexport default DeckBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"sources":["/home/steffent/Project-2/front-end/my-app/src/Components/DeckBuilder.js"],"names":["React","useEffect","useState","CardList","SearchBar","DeckBuilder","input","setInput","mtgCardsList","setMtgCardsList","fetchData","searchInput","fetch","then","res","json","data","cards","updateInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;;AAGA,QAAMQ,SAAS,GAAG,MAAOC,WAAP,IAAuB;AACzC,WAAO,MAAMC,KAAK,CAAE,kDAAiDD,WAAY,EAA/D,CAAL,CACZE,IADY,CACPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADA,EAEZF,IAFY,CAEPG,IAAI,IAAI;AACVP,MAAAA,eAAe,CAACO,IAAI,CAACC,KAAN,CAAf;AAEH,KALY,CAAb;AAMC,GAPD;;AASA,QAAMC,WAAW,GAAG,MAAOZ,KAAP,IAAiB;AACjCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,UAAMI,SAAS,CAACJ,KAAD,CAAf;AACH,GAHD;;AAKAL,EAAAA,SAAS,CAAE,MAAM;AAACS,IAAAA,SAAS,CAAC,EAAD,CAAT;AAAc,GAAvB,EAAyB,EAAzB,CAAT;AAEI,sBAAQ;AAAA,eACGF,YAAY,iBAAI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEF,KAAlB;AAAyB,MAAA,QAAQ,EAAEY;AAAnC;AAAA;AAAA;AAAA;AAAA,YADnB,eAEQ;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACHV,YAAY,iBAAI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADb;AAAA;AAAA;AAAA;AAAA,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH;;GA5BQH,W;;KAAAA,W;AA8BT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBar from \"./SearchBar\";\n\nfunction DeckBuilder() {\nconst [input, setInput] = useState('');\nconst [mtgCardsList, setMtgCardsList] = useState();\n\n\nconst fetchData = async (searchInput) => {\nreturn await fetch(`https://api.magicthegathering.io/v1/cards?name=${searchInput}`)\n.then(res => res.json())\n.then(data => {\n    setMtgCardsList(data.cards)\n    \n})\n}\n\nconst updateInput = async (input) => {\n    setInput(input);\n    await fetchData(input)\n}\n\nuseEffect( () => {fetchData(\"\")}, []);\n\n    return( <div>  \n              {mtgCardsList && <SearchBar input={input} onChange={updateInput}/>} \n                    <div className=\"cardcontainer\">\n                {mtgCardsList && <CardList mtgCardsList={mtgCardsList}/>}\n                    </div>\n            </div>\n    )\n}\n\nexport default DeckBuilder;"]},"metadata":{},"sourceType":"module"}