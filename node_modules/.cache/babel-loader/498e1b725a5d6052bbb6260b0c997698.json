{"ast":null,"code":"var _jsxFileName = \"/home/steffent/Project-2/Phase-2-Project-MTG/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { Component, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from './Components/Home';\nimport NavBar from './Components/NavBar';\nimport DeckBuilder from './Components/DeckBuilder';\nimport MyDeck from './Components/MyDeck';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [mtgCardsList, setMtgCardsList] = useState();\n  const [newMtgMyDeck, setNewMtgMyDeck] = useState([]);\n\n  const fetchData = async searchInput => {\n    return await fetch(`https://api.magicthegathering.io/v1/cards?name=${searchInput}`).then(res => res.json()).then(data => {\n      setMtgCardsList(data.cards);\n    });\n  };\n\n  const updateInput = async input => {\n    setInput(input);\n    await fetchData(input);\n  };\n\n  useEffect(() => {\n    fetchData(\"\");\n  }, []);\n\n  const parentCallback = mtgMyDeck => {\n    setNewMtgMyDeck(mtgMyDeck);\n  };\n\n  const handleOnClickDeck = () => {\n    setNewMtgMyDeck([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/DeckBuilder\",\n        children: mtgCardsList && /*#__PURE__*/_jsxDEV(DeckBuilder, {\n          input: input,\n          onChange: updateInput,\n          mtgCardsList: mtgCardsList,\n          parentCallback: parentCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/MyDeck\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myDeckBanner\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"myDeckButton\",\n            onClick: () => handleOnClickDeck(),\n            children: \"Delete Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), newMtgMyDeck.map(myDeckCard => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mydeck\",\n          children: /*#__PURE__*/_jsxDEV(MyDeck, {\n            myDeckCard: myDeckCard\n          }, myDeckCard, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 44\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bRFxio17qEDEWYbDKuluF+z+xow=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/steffent/Project-2/Phase-2-Project-MTG/src/App.js"],"names":["React","Component","useEffect","useState","Route","Switch","Home","NavBar","DeckBuilder","MyDeck","App","input","setInput","mtgCardsList","setMtgCardsList","newMtgMyDeck","setNewMtgMyDeck","fetchData","searchInput","fetch","then","res","json","data","cards","updateInput","parentCallback","mtgMyDeck","handleOnClickDeck","map","myDeckCard"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from './Components/Home';\nimport NavBar from './Components/NavBar';\nimport DeckBuilder from './Components/DeckBuilder';\nimport MyDeck from './Components/MyDeck';\n\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [mtgCardsList, setMtgCardsList] = useState();\n  const [newMtgMyDeck, setNewMtgMyDeck] = useState([]);\n\n  const fetchData = async (searchInput) => {\n    return await fetch(`https://api.magicthegathering.io/v1/cards?name=${searchInput}`)\n      .then(res => res.json())\n      .then(data => {\n        setMtgCardsList(data.cards)\n      })\n  }\n\n  const updateInput = async (input) => {\n    setInput(input);\n    await fetchData(input);\n  }\n\n  useEffect(() => { fetchData(\"\") }, []);\n  \n  const parentCallback = (mtgMyDeck) => {\n    setNewMtgMyDeck(mtgMyDeck)\n  };\n\n  const handleOnClickDeck = () => {\n    setNewMtgMyDeck([])\n  }\n\n  return (\n    <div >\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/DeckBuilder\">\n          {mtgCardsList && <DeckBuilder input={input} onChange={updateInput} mtgCardsList={mtgCardsList} parentCallback={parentCallback} />}\n        </Route>\n        <Route exact path=\"/MyDeck\">\n          <div className=\"myDeckBanner\">\n          <button className=\"myDeckButton\"onClick={() => handleOnClickDeck()}>Delete Deck</button>\n          </div>\n          {newMtgMyDeck.map(myDeckCard => (<div className=\"mydeck\"><MyDeck\n            key={myDeckCard}\n            myDeckCard={myDeckCard}\n          />\n          </div>))}\n        </Route>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}