{"ast":null,"code":"var _jsxFileName = \"/home/steffent/Project-2/front-end/my-app/src/Components/DeckBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport MtgCard from \"./MtgCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckBuilder({\n  input,\n  onChange,\n  mtgCardsList,\n  handleOnClick\n}) {\n  _s();\n\n  const [mtgMyDeck, setMtgMyDeck] = useState([]);\n  const cardsWithImages = mtgCardsList.filter(card => card.imageUrl);\n  const cardSet = new Set(cardsWithImages.map(card => card.name));\n  const filteredCards = [];\n  cardsWithImages.forEach(card => {\n    if (cardSet.has(card.name)) {\n      cardSet.delete(card.name);\n      filteredCards.push(card);\n    }\n  }); // function handleOnClick(card) {\n  //     setMtgMyDeck(mtgMyDeck.concat(card.imageUrl))\n  //     setDeckCardNumber(deckCardNumber + 1)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      input: input,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: [\"Cards in Deck :\", deckCardNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: filteredCards.map(card => /*#__PURE__*/_jsxDEV(MtgCard, {\n        card: card,\n        handleOnClick: handleOnClick\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DeckBuilder, \"3I+rBPlbPmwTEuv3P0oyLGj0DV4=\");\n\n_c = DeckBuilder;\nexport default DeckBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"sources":["/home/steffent/Project-2/front-end/my-app/src/Components/DeckBuilder.js"],"names":["React","useState","SearchBar","MtgCard","DeckBuilder","input","onChange","mtgCardsList","handleOnClick","mtgMyDeck","setMtgMyDeck","cardsWithImages","filter","card","imageUrl","cardSet","Set","map","name","filteredCards","forEach","has","delete","push","deckCardNumber","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,YAAnB;AAAiCC,EAAAA;AAAjC,CAArB,EAAsE;AAAA;;AAElE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMU,eAAe,GAAGJ,YAAY,CAACK,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACC,QAAjC,CAAxB;AACA,QAAMC,OAAO,GAAG,IAAIC,GAAJ,CAAQL,eAAe,CAACM,GAAhB,CAAoBJ,IAAI,IAAIA,IAAI,CAACK,IAAjC,CAAR,CAAhB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACAR,EAAAA,eAAe,CAACS,OAAhB,CAAwBP,IAAI,IAAI;AAC5B,QAAIE,OAAO,CAACM,GAAR,CAAYR,IAAI,CAACK,IAAjB,CAAJ,EAA4B;AACxBH,MAAAA,OAAO,CAACO,MAAR,CAAeT,IAAI,CAACK,IAApB;AACAC,MAAAA,aAAa,CAACI,IAAd,CAAmBV,IAAnB;AACH;AAEJ,GAND,EAPkE,CAelE;AACA;AACA;AACA;;AAEA,sBAAQ;AAAA,4BACJ,QAAC,SAAD;AAAW,MAAA,KAAK,EAAER,KAAlB;AAAyB,MAAA,QAAQ,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AAAA,oCAAwBkB,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,eAGJ;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,gBACKL,aAAa,CAACF,GAAd,CAAmBJ,IAAD,iBACf,QAAC,OAAD;AAEI,QAAA,IAAI,EAAEA,IAFV;AAGI,QAAA,aAAa,EAAEL;AAHnB,SACSK,IAAI,CAACY,EADd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAeH;;GAnCQrB,W;;KAAAA,W;AAqCT,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport MtgCard from \"./MtgCard\";\n\nfunction DeckBuilder({ input, onChange, mtgCardsList, handleOnClick}) {\n\n    const [mtgMyDeck, setMtgMyDeck] = useState([])\n    \n    const cardsWithImages = mtgCardsList.filter(card => card.imageUrl)\n    const cardSet = new Set(cardsWithImages.map(card => card.name))\n    const filteredCards = [];\n    cardsWithImages.forEach(card => {\n        if (cardSet.has(card.name)) {\n            cardSet.delete(card.name)\n            filteredCards.push(card)\n        }\n\n    })\n\n    // function handleOnClick(card) {\n    //     setMtgMyDeck(mtgMyDeck.concat(card.imageUrl))\n    //     setDeckCardNumber(deckCardNumber + 1)\n    // }\n\n    return (<div>\n        <SearchBar input={input} onChange={onChange} />\n        <button>Cards in Deck :{deckCardNumber}</button>\n        <div className=\"\">\n            {filteredCards.map((card) => (\n                <MtgCard\n                    key={card.id}\n                    card={card}\n                    handleOnClick={handleOnClick}\n                />\n            ))}\n\n        </div>\n    </div>\n    )\n}\n\nexport default DeckBuilder;"]},"metadata":{},"sourceType":"module"}