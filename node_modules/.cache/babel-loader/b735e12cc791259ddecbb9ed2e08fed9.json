{"ast":null,"code":"var _jsxFileName = \"/home/steffent/Project-2/front-end/my-app/src/Components/DeckBuilder.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBar from \"./SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckBuilder({\n  input,\n  onChange,\n  mtgCardsList\n}) {\n  _s();\n\n  const [mtgMyDeck, setMtgMyDeck] = useState([]);\n  const [deckCardNumber, setDeckCardNumber] = useState(0);\n  const cardsWithImages = mtgCardsList.filter(card => card.imageUrl);\n  const cardSet = new Set(cardsWithImages.map(card => card.name));\n  const filteredCards = [];\n  cardsWithImages.forEach(card => {\n    if (cardSet.has(card.name)) {\n      cardSet.delete(card.name);\n      filteredCards.push(card);\n    }\n  });\n\n  function handleOnClick(card) {\n    setMtgMyDeck(mtgMyDeck.concat(card.imageUrl));\n    setDeckCardNumber(deckCardNumber + 1);\n    console.log(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      input: input,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        mtgCardsList: mtgCardsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DeckBuilder, \"Bok1ZaAki6XfdtshuNwYUX7i994=\");\n\n_c = DeckBuilder;\nexport default DeckBuilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckBuilder\");","map":{"version":3,"sources":["/home/steffent/Project-2/front-end/my-app/src/Components/DeckBuilder.js"],"names":["React","CardList","SearchBar","DeckBuilder","input","onChange","mtgCardsList","mtgMyDeck","setMtgMyDeck","useState","deckCardNumber","setDeckCardNumber","cardsWithImages","filter","card","imageUrl","cardSet","Set","map","name","filteredCards","forEach","has","delete","push","handleOnClick","concat","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAArB,EAAsD;AAAA;;AAElD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCF,QAAQ,CAAC,CAAD,CAApD;AACA,QAAMG,eAAe,GAAGN,YAAY,CAACO,MAAb,CAAoBC,IAAI,IAAIA,IAAI,CAACC,QAAjC,CAAxB;AACA,QAAMC,OAAO,GAAG,IAAIC,GAAJ,CAAQL,eAAe,CAACM,GAAhB,CAAoBJ,IAAI,IAAIA,IAAI,CAACK,IAAjC,CAAR,CAAhB;AACA,QAAMC,aAAa,GAAG,EAAtB;AACAR,EAAAA,eAAe,CAACS,OAAhB,CAAwBP,IAAI,IAAI;AAC5B,QAAIE,OAAO,CAACM,GAAR,CAAYR,IAAI,CAACK,IAAjB,CAAJ,EAA4B;AACxBH,MAAAA,OAAO,CAACO,MAAR,CAAeT,IAAI,CAACK,IAApB;AACAC,MAAAA,aAAa,CAACI,IAAd,CAAmBV,IAAnB;AACH;AAEJ,GAND;;AAQA,WAASW,aAAT,CAAuBX,IAAvB,EAA6B;AACzBN,IAAAA,YAAY,CAACD,SAAS,CAACmB,MAAV,CAAiBZ,IAAI,CAACC,QAAtB,CAAD,CAAZ;AACAJ,IAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACH;;AAMD,sBAAQ;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEV,KAAlB;AAAyB,MAAA,QAAQ,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOH;;GAhCQH,W;;KAAAA,W;AAkCT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport CardList from \"./CardList\";\nimport SearchBar from \"./SearchBar\";\n\nfunction DeckBuilder({input, onChange, mtgCardsList}) {\n\n    const [mtgMyDeck, setMtgMyDeck] = useState([])\n    const [deckCardNumber, setDeckCardNumber] = useState(0)\n    const cardsWithImages = mtgCardsList.filter(card => card.imageUrl)\n    const cardSet = new Set(cardsWithImages.map(card => card.name))\n    const filteredCards = [];\n    cardsWithImages.forEach(card => {\n        if (cardSet.has(card.name)) {\n            cardSet.delete(card.name)\n            filteredCards.push(card)\n        }\n\n    })\n\n    function handleOnClick(card) {\n        setMtgMyDeck(mtgMyDeck.concat(card.imageUrl))\n        setDeckCardNumber(deckCardNumber + 1)\n        console.log(card)\n    }\n\n\n\n\n\n    return( <div>  \n              <SearchBar input={input} onChange={onChange}/>\n                <div className=\"\">\n                    <CardList mtgCardsList={mtgCardsList}/>\n                </div>\n            </div>\n    )\n}\n\nexport default DeckBuilder;"]},"metadata":{},"sourceType":"module"}